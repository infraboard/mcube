syntax = "proto3";

package infraboard.mcube.http;

option go_package = "github.com/infraboard/mcube/v2/pb/http";
option java_package = "com.google.protobuf";
option java_outer_classname = "HttpProtos";
option csharp_namespace = "Google.Protobuf.Reflection";
option objc_class_prefix = "GPB";
option cc_enable_arenas = true;

// descriptor.proto must be optimized for speed because reflection-based
// algorithms don't work during bootstrapping.
option optimize_for = SPEED;

import "google/protobuf/descriptor.proto";

extend google.protobuf.MethodOptions {
    Entry rest_api = 20210228;
}

// Entry 路由条目
message Entry {
    // 函数名称
    // @gotags: bson:"function_name" json:"function_name"
    string function_name = 2;
    // HTTP path 用于自动生成http api
    // @gotags: bson:"path" json:"path"
    string path = 3;
    // HTTP method 用于自动生成http api
    // @gotags: bson:"method" json:"method"
    string method = 4;
    // 资源名称
    // @gotags: bson:"resource" json:"resource"
    string resource = 5;
    // 是否校验用户身份 (acccess_token)
    // @gotags: bson:"auth_enable" json:"auth_enable"
    bool auth_enable = 6;
    // 是否校验用户权限
    // @gotags: bson:"permission_enable" json:"permission_enable"
    bool permission_enable = 7;
    // 允许的通过的身份标识符, 比如角色, 用户类型之类
    // @gotags: bson:"allow" json:"allow"
    repeated string allow = 12;
    // 是否开启操作审计, 开启后这次操作将被记录
    // @gotags: bson:"audit_log" json:"audit_log"
    bool audit_log = 9;
    // 名称空间不能为空
    // @gotags: bson:"required_namespace" json:"required_namespace"
    bool required_namespace = 10;
    // 标签
    // @gotags: bson:"labels" json:"labels"
    map<string, string> labels = 8;
    // 扩展属性
    // @gotags: bson:"extension" json:"extension"
    map<string, string> extension = 11;        
}